{"version":3,"file":"static/js/214.a355263f.chunk.js","mappings":"0MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,E,2DC+DjC,EA3DoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXL,GAAWM,EAAAA,EAAAA,IAAYR,GAoB7B,OACE,UAACS,EAAA,EAAD,CACEC,SAbqB,SAAAC,GACvBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,OAXlB,SAAAF,GAClB,IAAMI,EAA2BJ,EAAKK,cACtC,OAAOlB,EAASmB,MACd,SAAAC,GAAO,OAAIA,EAAQP,KAAKK,gBAAkBD,CAAnC,GAEV,CAOCI,CAAYR,GAERT,GAASkB,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAMG,OAAAA,KAD5BO,EAAAA,GAAAA,KAAW,kCAEfZ,EAAKa,OACN,EAKGC,UAAU,OACVC,GAAI,CACFC,QAAS,OACTC,eAAgB,SAChB,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,YAAU,EACVC,aAAa,MATf,WAWE,SAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,OACNtB,KAAK,OACLuB,KAAK,QACLC,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,KAEV,SAACN,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNtB,KAAK,SACLuB,KAAK,QACLC,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,KAEV,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYL,KAAK,SAASM,KAAK,SAA/C,SAAwD,kBAK7D,E,mBC7DYC,EAAiBC,EAAAA,GAAAA,GAAH,mHAOdC,EAAqBD,EAAAA,GAAAA,EAAH,sDCwB/B,EA5BwB,SAAC,GAAiB,IAAfxB,EAAc,EAAdA,QACjBc,EAAqBd,EAArBc,GAAIrB,EAAiBO,EAAjBP,KAAMG,EAAWI,EAAXJ,OACZZ,GAAWC,EAAAA,EAAAA,MAMjB,OACE,+BACE,UAACsC,EAAD,YACE,UAACE,EAAD,WACGhC,EAAK,KAAGG,MAGX,SAACwB,EAAA,EAAD,CACEC,QAAQ,YACRL,KAAK,SACLM,KAAK,SACLI,QAAS,kBAfI,SAAAZ,GACnB9B,GAAS2C,EAAAA,EAAAA,IAAcb,GACxB,CAasBc,CAAad,EAAnB,EAJX,SAKC,eAMR,EC7BYe,EAAaL,EAAAA,GAAAA,GAAH,4JC4BvB,EAzBoB,WAClB,IAAM5C,GAAWM,EAAAA,EAAAA,IAAYR,GACvBK,GAASG,EAAAA,EAAAA,IAAYJ,GAUrBgD,EARqB,WACzB,IAAMC,EAAmBhD,EAAOe,cAEhC,OAAOlB,EAASG,QAAO,qBAAGU,KACnBK,cAAckC,SAASD,EADP,GAGxB,CAEuBE,GAExB,OACE,+BACE,SAACJ,EAAD,UACGC,EAAgBI,KAAI,SAAAlC,GACnB,OAAO,SAAC,EAAD,CAAkCA,QAASA,GAArBA,EAAQc,GACtC,OAIR,E,UCDD,EAvBe,WACb,IAAM9B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,+BACE,SAAC4B,EAAA,EAAD,CACEsB,SARW,SAAC,GAAgB,IAC1BC,EADyB,EAAb5C,OACSG,MAC3BX,GAASqD,EAAAA,EAAAA,GAAaD,GACvB,EAMKtB,GAAG,iBACHQ,KAAK,OACLP,MAAM,wBACNtB,KAAK,SACLuB,KAAK,QACLG,UAAQ,KAIf,E,UCvBYmB,EAAYd,EAAAA,GAAAA,IAAH,uICiCtB,EA1BiB,WACf,IAAM5C,GAAWM,EAAAA,EAAAA,IAAYR,GACvBM,GAAWC,EAAAA,EAAAA,MAMjB,OAJAsD,EAAAA,EAAAA,YAAU,WACRvD,GAASwD,EAAAA,EAAAA,MACV,GAAE,CAACxD,KAGF,UAACsD,EAAD,YACE,SAAC,EAAD,KACA,wBAAI,mBAEH1D,IACsB,IAApBA,EAAS6D,QACR,uBAAG,uCAEH,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,UAKX,C","sources":["store/selector.js","components/ContactForm/index.jsx","components/ContactListItem/contactListItem.styled.jsx","components/ContactListItem/index.jsx","components/ContactList/contactList.styled.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","page/ContactsPage/Contacts.styled.jsx","page/ContactsPage/index.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'store/selector';\nimport { addContact } from 'store/operations';\nimport { Box, Button, TextField } from '@mui/material';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const findContact = name => {\n    const normalizedNewContactName = name.toLowerCase();\n    return contacts.some(\n      contact => contact.name.toLowerCase() === normalizedNewContactName\n    );\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    findContact(name)\n      ? toast.warn('This contact is already added!')\n      : dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Box\n      onSubmit={handleFormSubmit}\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Name\"\n        name=\"name\"\n        size=\"small\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Number\"\n        name=\"number\"\n        size=\"small\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button variant=\"contained\" size=\"medium\" type=\"submit\">\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ListItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n`;\n\nexport const ListItemTextStyled = styled.p`\n  width: 100%;\n  margin: 0;\n`;\n","import { ListItemStyled, ListItemTextStyled } from './contactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/operations';\nimport { Button } from '@mui/material';\n\nconst ContactListItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <ListItemStyled>\n        <ListItemTextStyled>\n          {name}: {number}\n        </ListItemTextStyled>\n\n        <Button\n          variant=\"contained\"\n          size=\"medium\"\n          type=\"button\"\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </Button>\n      </ListItemStyled>\n    </>\n  );\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  /* width: 600px; */\n  gap: 15px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n","import ContactListItem from 'components/ContactListItem';\nimport { ListStyled } from './contactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'store/selector';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <ListStyled>\n        {visibleContacts.map(contact => {\n          return <ContactListItem key={contact.id} contact={contact} />;\n        })}\n      </ListStyled>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'store/filterSlice';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = ({ target }) => {\n    const filterValue = target.value;\n    dispatch(changeFilter(filterValue));\n  };\n\n  return (\n    <>\n      <TextField\n        onChange={onChange}\n        id=\"outlined-basic\"\n        type=\"text\"\n        label=\"Find contacts by name\"\n        name=\"filter\"\n        size=\"small\"\n        required\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n`;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'store/selector';\nimport { Container } from './Contacts.styled';\nimport { fetchContacts } from 'store/operations';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <h2>Your contacts:</h2>\n\n      {contacts &&\n        (contacts.length === 0 ? (\n          <p>There are no contacts in the list</p>\n        ) : (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ))}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","dispatch","useDispatch","useSelector","Box","onSubmit","event","preventDefault","form","target","name","elements","value","number","normalizedNewContactName","toLowerCase","some","contact","findContact","addContact","toast","reset","component","sx","display","justifyContent","m","width","noValidate","autoComplete","TextField","id","label","size","pattern","title","required","Button","variant","type","ListItemStyled","styled","ListItemTextStyled","onClick","deleteContact","handleDelete","ListStyled","visibleContacts","normalizedFilter","includes","getVisibleContacts","map","onChange","filterValue","changeFilter","Container","useEffect","fetchContacts","length"],"sourceRoot":""}